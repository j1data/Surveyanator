clear,clc
%AerE 261
%Jr.JPL Blake, Ellie, Jeremy, Justin, Nicole
%Surveyanator
%scaling factor 0.28:1 to the bonanza
%based of Beechcraft Bonanza and Cessna 172

inputs = GetGoogleSpreadsheet('1mX9oFI3Zd5SyJR2twwYRWJ417U7gUv60qco82aeOLdE');
inputs = str2double(inputs);
inputs = num2cell(inputs);
%Import Vars from Spreadsheet --->
[density temp dynamicViscosity wingSpan velocity wingChord wingXOverC wingTOverC wingSweepAngle Qwing fuselageLength] = inputs{2,:};
[LVT CVT SHT LHT cht lht] = inputs{6,2:7};
[quarterChordVertStab chordVertStab vertTOverC vertSweepAngle quarterChordHorzStab chordHorzStab horzToverC horzSweepAngle] = inputs{10,1:8};
[frontStruts_Sfront frontStruts_dOverq wheel_Sfront wheel_dOverq backStrut_Sfront backStrut_dOverq E_density E_battery] = inputs{14,1:8};
[alat0 anot W_e W_p n_prop n_motor] = inputs{18,1:7};

%General Calculations ---->
Mach_val = Mach(velocity, temp);

%Main Wing Calcs -->
Swing = wingSpan*wingChord;
ReWing = Reynolds(density,velocity,dynamicViscosity,wingChord);
cfWing = FrictionCoefficient(ReWing,Mac_val);
FFWing = FormFactor(wingXOverC,wingTOverC,wingSweepAngle,Mach_val);
wingSWetted = (1.977+0.52*wingTOverC)*Swing; %(m^2)
cd_o_Wing = cfWing*FFWing8(wingSWetted/Swing)*Qwing;

%Fuselage Calcs -->
f = fuselageLength/(sqrt(4/pi)*pi);
ffFuse = 0.9 + (5/(f^1.5))+(f/400);
ReFuse = Reynolds(density,velocity,dynamicViscosity,fuselageLength);
sWettedFuse = pi*0.8*fuselageLength; %(m^2)
cfFuse = FrictionCoefficient(ReFuse,Mach_val);
cd_o_Fuse = cfFuse*ffFuse*1*(sWettedFuse/2.15);

%Vert tail sizing calcs -->
[svt] = TailVertCoefficient(cvt,lvt,b,Swing);

%Horz tail sizing calcs -->
Cavg = Swing/b;
[sht] = TailHorizCoefficient(cht,lht,Cavg,Swing);

%Vertical Stabilizer calcs -->
ReVert = Reynolds(density,velocity,dynamicViscosity,chordVertStab);
cfVert = FrictionCoefficient(ReVert,Mach_val);
ffVert = FormFactor(quarterChordVertStab,vertTOverC,vertSweepAngle,Mach_val);
sWettedVert = CVT/Swing; %(m^2)
cd_o_Vert = cfVert*ffVert*(sWettedVert/2.15)*1.05;

%Horizontal Stabilizer calcs -->
ReHoriz = Reynolds(density,velocity,dynamicViscosity,chordHorzStab);

cfHoriz = FrictionCoefficient(ReHoriz,Mach_val);
ffHoriz = FormFactor(chordHorzStab,horzToverC,horzSweepAngle,Mach_val);
sWettedHoriz = cht/Swing; %meters^2
cd_o_Horz = cfHoriz*ffHoriz*(sWettedHoriz/2.15)*1.05;

%Landing gear struts (front 2) calcs -->
cd_o_landF = frontStruts_dOverq*(frontStruts_Sfront/Swing);

%Landing gear struts (back 1)  calcs -->
cd_o_landB = backStrut_dOverq*(backStrut_Sfront/Swing);

%Landing Gear Wheels (3 wheels) calcs -->
cd_o_wheels = wheel_dOverq*(wheel_Sfront/Swing);

%Drag buildup calcs -->
dragBuildUp = cd_o_Wing + cd_o_Fuse + cd_o_Vert + cd_o_Horz + cd_o_landB + cd_o_landB + cd_o_wheels;

%Lift calculations -->
AR = wingSpan*wingChord;
e_o = 1.78*(1-0.045*(AR^0.68))-0.64; %Unitless
K = 1/(pi*e_o*AR);
a3D = anot/(1+((57.3*anot)/(pi*0.7*AR)));

%Battery Calculations -->
batteryWeight = E_battery/E_density; %(kg)

%Cl & CL calcs -->
W_total = W_e+W_p+batteryWeight; %(Newtons)
CLift = (W_total)/(0.5*density*(velocity^2)*Swing);

%Weight Fraction Calcs -->
frac_W_e = W_e/W_total;
frac_W_p = W_p/W_total;
frac_W_f = batteryWeight/W_total;

%AoA @SLF
alpha3D_SLF = (CLift/a3D)+alat0;

%Range calculations -->
CLoCD_max = 1/(4*K*dragBuildUp);
CLoCD_3half_max = (((3*dragBuildUp)/K)^1.5))/(4*dragBuildUp);

endurance = (E_battery*n_prop*n_motor*((density*Swing)^0.5)*CLoCD_3half_max)/((2^(0.5))*(W_total^(1.5)))/60;
range = (((E_battery*n_motor*n_prop)/W_total)*CL)

